{"ast":null,"code":"import _defineProperty from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{memo}from\"react\";import{Switch}from\"react-router-dom\";import{withStyles}from\"@material-ui/core\";import Dashboard from\"./dashboard/Dashboard\";import Posts from\"./posts/Posts\";import Subscription from\"./subscription/Subscription\";import PropsRoute from\"../../shared/components/PropsRoute\";var styles=function styles(theme){var _wrapper;return{wrapper:(_wrapper={margin:theme.spacing(1),width:\"auto\"},_defineProperty(_wrapper,theme.breakpoints.up(\"xs\"),{width:\"95%\",marginLeft:\"auto\",marginRight:\"auto\",marginTop:theme.spacing(4),marginBottom:theme.spacing(4)}),_defineProperty(_wrapper,theme.breakpoints.up(\"sm\"),{marginTop:theme.spacing(6),marginBottom:theme.spacing(6),width:\"90%\",marginLeft:\"auto\",marginRight:\"auto\"}),_defineProperty(_wrapper,theme.breakpoints.up(\"md\"),{marginTop:theme.spacing(6),marginBottom:theme.spacing(6),width:\"82.5%\",marginLeft:\"auto\",marginRight:\"auto\"}),_defineProperty(_wrapper,theme.breakpoints.up(\"lg\"),{marginTop:theme.spacing(6),marginBottom:theme.spacing(6),width:\"70%\",marginLeft:\"auto\",marginRight:\"auto\"}),_wrapper)};};function Routing(props){var classes=props.classes,EmojiTextArea=props.EmojiTextArea,ImageCropper=props.ImageCropper,Dropzone=props.Dropzone,DateTimePicker=props.DateTimePicker,pushMessageToSnackbar=props.pushMessageToSnackbar,posts=props.posts,transactions=props.transactions,toggleAccountActivation=props.toggleAccountActivation,CardChart=props.CardChart,statistics=props.statistics,targets=props.targets,setTargets=props.setTargets,setPosts=props.setPosts,isAccountActivated=props.isAccountActivated,selectDashboard=props.selectDashboard,selectPosts=props.selectPosts,selectSubscription=props.selectSubscription,openAddBalanceDialog=props.openAddBalanceDialog;return/*#__PURE__*/React.createElement(\"div\",{className:classes.wrapper},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(PropsRoute,{path:\"/c/posts\",component:Posts,EmojiTextArea:EmojiTextArea,ImageCropper:ImageCropper,Dropzone:Dropzone,DateTimePicker:DateTimePicker,pushMessageToSnackbar:pushMessageToSnackbar,posts:posts,setPosts:setPosts,selectPosts:selectPosts}),/*#__PURE__*/React.createElement(PropsRoute,{path:\"/c/subscription\",component:Subscription,transactions:transactions,pushMessageToSnackbar:pushMessageToSnackbar,selectSubscription:selectSubscription,openAddBalanceDialog:openAddBalanceDialog}),/*#__PURE__*/React.createElement(PropsRoute,{path:\"\",component:Dashboard,toggleAccountActivation:toggleAccountActivation,pushMessageToSnackbar:pushMessageToSnackbar,CardChart:CardChart,statistics:statistics,targets:targets,setTargets:setTargets,isAccountActivated:isAccountActivated,selectDashboard:selectDashboard})));}export default withStyles(styles,{withTheme:true})(memo(Routing));","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_in/components/Routing.js"],"names":["React","memo","Switch","withStyles","Dashboard","Posts","Subscription","PropsRoute","styles","theme","wrapper","margin","spacing","width","breakpoints","up","marginLeft","marginRight","marginTop","marginBottom","Routing","props","classes","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","pushMessageToSnackbar","posts","transactions","toggleAccountActivation","CardChart","statistics","targets","setTargets","setPosts","isAccountActivated","selectDashboard","selectPosts","selectSubscription","openAddBalanceDialog","withTheme"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport Posts from \"./posts/Posts\";\nimport Subscription from \"./subscription/Subscription\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"90%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"82.5%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"70%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n});\n\nfunction Routing(props) {\n  const {\n    classes,\n    EmojiTextArea,\n    ImageCropper,\n    Dropzone,\n    DateTimePicker,\n    pushMessageToSnackbar,\n    posts,\n    transactions,\n    toggleAccountActivation,\n    CardChart,\n    statistics,\n    targets,\n    setTargets,\n    setPosts,\n    isAccountActivated,\n    selectDashboard,\n    selectPosts,\n    selectSubscription,\n    openAddBalanceDialog,\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"/c/posts\"\n          component={Posts}\n          EmojiTextArea={EmojiTextArea}\n          ImageCropper={ImageCropper}\n          Dropzone={Dropzone}\n          DateTimePicker={DateTimePicker}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          posts={posts}\n          setPosts={setPosts}\n          selectPosts={selectPosts}\n        />\n        <PropsRoute\n          path=\"/c/subscription\"\n          component={Subscription}\n          transactions={transactions}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectSubscription={selectSubscription}\n          openAddBalanceDialog={openAddBalanceDialog}\n        />\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n          toggleAccountActivation={toggleAccountActivation}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          CardChart={CardChart}\n          statistics={statistics}\n          targets={targets}\n          setTargets={setTargets}\n          isAccountActivated={isAccountActivated}\n          selectDashboard={selectDashboard}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n  classes: PropTypes.object.isRequired,\n  EmojiTextArea: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  pushMessageToSnackbar: PropTypes.func,\n  setTargets: PropTypes.func.isRequired,\n  setPosts: PropTypes.func.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleAccountActivation: PropTypes.func,\n  CardChart: PropTypes.elementType,\n  statistics: PropTypes.object.isRequired,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isAccountActivated: PropTypes.bool.isRequired,\n  selectDashboard: PropTypes.func.isRequired,\n  selectPosts: PropTypes.func.isRequired,\n  selectSubscription: PropTypes.func.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n"]},"metadata":{},"sourceType":"module"}