{"ast":null,"code":"import _slicedToArray from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{Fragment,useState,useRef,useCallback}from\"react\";import{Popover,IconButton,AppBar,List,Divider,ListItem,ListItemText,Typography,Box,withStyles}from\"@material-ui/core\";import MessageIcon from\"@material-ui/icons/Message\";import MessageListItem from\"./MessageListItem\";var styles=function styles(theme){return{tabContainer:{overflowY:\"auto\",maxHeight:350},popoverPaper:_defineProperty({width:\"100%\",maxWidth:350,marginLeft:theme.spacing(2),marginRight:theme.spacing(1)},theme.breakpoints.down(\"sm\"),{maxWidth:270}),divider:{marginTop:-2},noShadow:{boxShadow:\"none !important\"}};};function MessagePopperButton(props){var classes=props.classes,messages=props.messages;var anchorEl=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var handleClick=useCallback(function(){setIsOpen(!isOpen);},[isOpen,setIsOpen]);var handleClickAway=useCallback(function(){setIsOpen(false);},[setIsOpen]);var id=isOpen?\"scroll-playground\":null;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(IconButton,{onClick:handleClick,buttonRef:anchorEl,\"aria-label\":\"Open Messages\",\"aria-describedby\":id,color:\"primary\"},/*#__PURE__*/React.createElement(MessageIcon,null)),/*#__PURE__*/React.createElement(Popover,{id:id,open:isOpen,anchorEl:anchorEl.current,anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"right\"},classes:{paper:classes.popoverPaper},onClose:handleClickAway},/*#__PURE__*/React.createElement(AppBar,{position:\"static\",color:\"inherit\",className:classes.noShadow},/*#__PURE__*/React.createElement(Box,{pt:1,pl:2,pb:1,pr:1},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\"},\"Messages\")),/*#__PURE__*/React.createElement(Divider,{className:classes.divider})),/*#__PURE__*/React.createElement(List,{dense:true,className:classes.tabContainer},messages.length===0?/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,null,\"You haven't received any messages yet.\")):messages.map(function(element,index){return/*#__PURE__*/React.createElement(MessageListItem,{key:index,message:element,divider:index!==messages.length-1});}))));}export default withStyles(styles,{withTheme:true})(MessagePopperButton);","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_in/components/navigation/MessagePopperButton.js"],"names":["React","Fragment","useState","useRef","useCallback","Popover","IconButton","AppBar","List","Divider","ListItem","ListItemText","Typography","Box","withStyles","MessageIcon","MessageListItem","styles","theme","tabContainer","overflowY","maxHeight","popoverPaper","width","maxWidth","marginLeft","spacing","marginRight","breakpoints","down","divider","marginTop","noShadow","boxShadow","MessagePopperButton","props","classes","messages","anchorEl","isOpen","setIsOpen","handleClick","handleClickAway","id","current","vertical","horizontal","paper","length","map","element","index","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  AppBar,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = theme => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270\n    }\n  },\n  divider: {\n    marginTop: -2\n  },\n  noShadow: {\n    boxShadow: \"none !important\"\n  }\n});\n\nfunction MessagePopperButton(props) {\n  const { classes, messages } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleClick}\n        buttonRef={anchorEl}\n        aria-label=\"Open Messages\"\n        aria-describedby={id}\n        color=\"primary\"\n      >\n        <MessageIcon />\n      </IconButton>\n      <Popover\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\n          <Box pt={1} pl={2} pb={1} pr={1}>\n            <Typography variant=\"subtitle1\">Messages</Typography>\n          </Box>\n          <Divider className={classes.divider} />\n        </AppBar>\n        <List dense className={classes.tabContainer}>\n          {messages.length === 0 ? (\n            <ListItem>\n              <ListItemText>\n                You haven&apos;t received any messages yet.\n              </ListItemText>\n            </ListItem>\n          ) : (\n            messages.map((element, index) => (\n              <MessageListItem\n                key={index}\n                message={element}\n                divider={index !== messages.length - 1}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\n"]},"metadata":{},"sourceType":"module"}