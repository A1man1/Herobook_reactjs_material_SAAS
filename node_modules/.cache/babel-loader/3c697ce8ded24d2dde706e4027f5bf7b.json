{"ast":null,"code":"import _regeneratorRuntime from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from\"react\";import{loadStripe}from\"@stripe/stripe-js\";import{Elements,CardElement,IbanElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import{Grid,Button,Box,withTheme}from\"@material-ui/core\";import StripeCardForm from\"./stripe/StripeCardForm\";import StripeIbanForm from\"./stripe/StripeIBANForm\";import FormDialog from\"../../../shared/components/FormDialog\";import ColoredButton from\"../../../shared/components/ColoredButton\";import HighlightedInformation from\"../../../shared/components/HighlightedInformation\";import ButtonCircularProgress from\"../../../shared/components/ButtonCircularProgress\";var stripePromise=loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");var paymentOptions=[\"Credit Card\",\"SEPA Direct Debit\"];var AddBalanceDialog=withTheme(function(props){var open=props.open,theme=props.theme,onClose=props.onClose,onSuccess=props.onSuccess;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(\"Credit Card\"),_useState4=_slicedToArray(_useState3,2),paymentOption=_useState4[0],setPaymentOption=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),stripeError=_useState6[0],setStripeError=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),email=_useState10[0],setEmail=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),amount=_useState12[0],setAmount=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),amountError=_useState14[0],setAmountError=_useState14[1];var elements=useElements();var stripe=useStripe();var onAmountChange=function onAmountChange(amount){if(amount<0){return;}if(amountError){setAmountError(\"\");}setAmount(amount);};var getStripePaymentInfo=function getStripePaymentInfo(){switch(paymentOption){case\"Credit Card\":{return{type:\"card\",card:elements.getElement(CardElement),billing_details:{name:name}};}case\"SEPA Direct Debit\":{return{type:\"sepa_debit\",sepa_debit:elements.getElement(IbanElement),billing_details:{email:email,name:name}};}default:throw new Error(\"No case selected in switch statement\");}};var renderPaymentComponent=function renderPaymentComponent(){switch(paymentOption){case\"Credit Card\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Box,{mb:2},/*#__PURE__*/React.createElement(StripeCardForm,{stripeError:stripeError,setStripeError:setStripeError,setName:setName,name:name,amount:amount,amountError:amountError,onAmountChange:onAmountChange})),/*#__PURE__*/React.createElement(HighlightedInformation,null,\"You can check this integration using the credit card number\",\" \",/*#__PURE__*/React.createElement(\"b\",null,\"4242 4242 4242 4242 04 / 24 24 242 42424\")));case\"SEPA Direct Debit\":return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Box,{mb:2},/*#__PURE__*/React.createElement(StripeIbanForm,{stripeError:stripeError,setStripeError:setStripeError,setName:setName,setEmail:setEmail,name:name,email:email,amount:amount,amountError:amountError,onAmountChange:onAmountChange})),/*#__PURE__*/React.createElement(HighlightedInformation,null,\"You can check this integration using the IBAN\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"b\",null,\"DE89370400440532013000\")));default:throw new Error(\"No case selected in switch statement\");}};return/*#__PURE__*/React.createElement(FormDialog,{open:open,onClose:onClose,headline:\"Add Balance\",hideBackdrop:false,loading:loading,onFormSubmit:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _yield$stripe$createP,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(amount<=0)){_context.next=4;break;}setAmountError(\"Can't be zero\");return _context.abrupt(\"return\");case 4:if(stripeError){setStripeError(\"\");}setLoading(true);_context.next=8;return stripe.createPaymentMethod(getStripePaymentInfo());case 8:_yield$stripe$createP=_context.sent;error=_yield$stripe$createP.error;if(!error){_context.next=14;break;}setStripeError(error.message);setLoading(false);return _context.abrupt(\"return\");case 14:onSuccess();case 15:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),content:/*#__PURE__*/React.createElement(Box,{pb:2},/*#__PURE__*/React.createElement(Box,{mb:2},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},paymentOptions.map(function(option){return/*#__PURE__*/React.createElement(Grid,{item:true,key:option},/*#__PURE__*/React.createElement(ColoredButton,{variant:option===paymentOption?\"contained\":\"outlined\",disableElevation:true,onClick:function onClick(){setStripeError(\"\");setPaymentOption(option);},color:theme.palette.common.black},option));}))),renderPaymentComponent()),actions:/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{fullWidth:true,variant:\"contained\",color:\"secondary\",type:\"submit\",size:\"large\",disabled:loading},\"Pay with Stripe \",loading&&/*#__PURE__*/React.createElement(ButtonCircularProgress,null)))});});function Wrapper(props){var open=props.open,onClose=props.onClose,onSuccess=props.onSuccess;return/*#__PURE__*/React.createElement(Elements,{stripe:stripePromise},open&&/*#__PURE__*/React.createElement(AddBalanceDialog,{open:open,onClose:onClose,onSuccess:onSuccess}));}export default Wrapper;","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_in/components/subscription/AddBalanceDialog.js"],"names":["React","useState","Fragment","loadStripe","Elements","CardElement","IbanElement","useStripe","useElements","Grid","Button","Box","withTheme","StripeCardForm","StripeIbanForm","FormDialog","ColoredButton","HighlightedInformation","ButtonCircularProgress","stripePromise","paymentOptions","AddBalanceDialog","props","open","theme","onClose","onSuccess","loading","setLoading","paymentOption","setPaymentOption","stripeError","setStripeError","name","setName","email","setEmail","amount","setAmount","amountError","setAmountError","elements","stripe","onAmountChange","getStripePaymentInfo","type","card","getElement","billing_details","sepa_debit","Error","renderPaymentComponent","event","preventDefault","createPaymentMethod","error","message","map","option","palette","common","black","Wrapper"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  IbanElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport { Grid, Button, Box, withTheme } from \"@material-ui/core\";\nimport StripeCardForm from \"./stripe/StripeCardForm\";\nimport StripeIbanForm from \"./stripe/StripeIBANForm\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport ColoredButton from \"../../../shared/components/ColoredButton\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\n\nconst paymentOptions = [\"Credit Card\", \"SEPA Direct Debit\"];\n\nconst AddBalanceDialog = withTheme(function (props) {\n  const { open, theme, onClose, onSuccess } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [paymentOption, setPaymentOption] = useState(\"Credit Card\");\n  const [stripeError, setStripeError] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [amountError, setAmountError] = useState(\"\");\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const onAmountChange = amount => {\n    if (amount < 0) {\n      return;\n    }\n    if (amountError) {\n      setAmountError(\"\");\n    }\n    setAmount(amount);\n  };\n\n  const getStripePaymentInfo = () => {\n    switch (paymentOption) {\n      case \"Credit Card\": {\n        return {\n          type: \"card\",\n          card: elements.getElement(CardElement),\n          billing_details: { name: name }\n        };\n      }\n      case \"SEPA Direct Debit\": {\n        return {\n          type: \"sepa_debit\",\n          sepa_debit: elements.getElement(IbanElement),\n          billing_details: { email: email, name: name }\n        };\n      }\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  const renderPaymentComponent = () => {\n    switch (paymentOption) {\n      case \"Credit Card\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeCardForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                name={name}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the credit card number{\" \"}\n              <b>4242 4242 4242 4242 04 / 24 24 242 42424</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      case \"SEPA Direct Debit\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeIbanForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                setEmail={setEmail}\n                name={name}\n                email={email}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the IBAN\n              <br />\n              <b>DE89370400440532013000</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  return (\n    <FormDialog\n      open={open}\n      onClose={onClose}\n      headline=\"Add Balance\"\n      hideBackdrop={false}\n      loading={loading}\n      onFormSubmit={async event => {\n        event.preventDefault();\n        if (amount <= 0) {\n          setAmountError(\"Can't be zero\");\n          return;\n        }\n        if (stripeError) {\n          setStripeError(\"\");\n        }\n        setLoading(true);\n        const { error } = await stripe.createPaymentMethod(\n          getStripePaymentInfo()\n        );\n        if (error) {\n          setStripeError(error.message);\n          setLoading(false);\n          return;\n        }\n        onSuccess();\n      }}\n      content={\n        <Box pb={2}>\n          <Box mb={2}>\n            <Grid container spacing={1}>\n              {paymentOptions.map(option => (\n                <Grid item key={option}>\n                  <ColoredButton\n                    variant={\n                      option === paymentOption ? \"contained\" : \"outlined\"\n                    }\n                    disableElevation\n                    onClick={() => {\n                      setStripeError(\"\");\n                      setPaymentOption(option);\n                    }}\n                    color={theme.palette.common.black}\n                  >\n                    {option}\n                  </ColoredButton>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n          {renderPaymentComponent()}\n        </Box>\n      }\n      actions={\n        <Fragment>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            size=\"large\"\n            disabled={loading}\n          >\n            Pay with Stripe {loading && <ButtonCircularProgress />}\n          </Button>\n        </Fragment>\n      }\n    />\n  );\n});\n\nAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nfunction Wrapper(props) {\n  const { open, onClose, onSuccess } = props;\n  return (\n    <Elements stripe={stripePromise}>\n      {open && (\n        <AddBalanceDialog open={open} onClose={onClose} onSuccess={onSuccess} />\n      )}\n    </Elements>\n  );\n}\n\n\nAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}