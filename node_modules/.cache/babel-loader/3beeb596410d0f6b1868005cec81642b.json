{"ast":null,"code":"import _slicedToArray from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Fragment}from\"react\";function LazyLoadAddBalanceDialog(props){var open=props.open,onClose=props.onClose,onSuccess=props.onSuccess;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),AddBalanceDialog=_useState2[0],setAddBalanceDialog=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),hasFetchedAddBalanceDialog=_useState4[0],setHasFetchedAddBlanceDialog=_useState4[1];useEffect(function(){if(open&&!hasFetchedAddBalanceDialog){setHasFetchedAddBlanceDialog(true);import(\"./AddBalanceDialog\").then(function(Component){setAddBalanceDialog(function(){return Component.default;});});}},[open,hasFetchedAddBalanceDialog,setHasFetchedAddBlanceDialog,setAddBalanceDialog]);return/*#__PURE__*/React.createElement(Fragment,null,AddBalanceDialog&&/*#__PURE__*/React.createElement(AddBalanceDialog,{open:open,onClose:onClose,onSuccess:onSuccess}));}export default LazyLoadAddBalanceDialog;","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_in/components/subscription/LazyLoadAddBalanceDialog.js"],"names":["React","useState","useEffect","Fragment","LazyLoadAddBalanceDialog","props","open","onClose","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","then","Component","default"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CAGA,QAASC,CAAAA,wBAAT,CAAkCC,KAAlC,CAAyC,IAC/BC,CAAAA,IAD+B,CACFD,KADE,CAC/BC,IAD+B,CACzBC,OADyB,CACFF,KADE,CACzBE,OADyB,CAChBC,SADgB,CACFH,KADE,CAChBG,SADgB,eAESP,QAAQ,CAAC,IAAD,CAFjB,wCAEhCQ,gBAFgC,eAEdC,mBAFc,8BAG4BT,QAAQ,CAAC,KAAD,CAHpC,yCAGhCU,0BAHgC,eAGJC,4BAHI,eAKvCV,SAAS,CAAC,UAAM,CACd,GAAII,IAAI,EAAI,CAACK,0BAAb,CAAyC,CACvCC,4BAA4B,CAAC,IAAD,CAA5B,CACA,OAAO,oBAAP,EAA6BC,IAA7B,CAAkC,SAAAC,SAAS,CAAI,CAC7CJ,mBAAmB,CAAC,iBAAMI,CAAAA,SAAS,CAACC,OAAhB,EAAD,CAAnB,CACD,CAFD,EAGD,CACF,CAPQ,CAON,CAACT,IAAD,CAAOK,0BAAP,CAAmCC,4BAAnC,CAAiEF,mBAAjE,CAPM,CAAT,CASA,mBACE,oBAAC,QAAD,MACGD,gBAAgB,eACf,oBAAC,gBAAD,EACE,IAAI,CAAEH,IADR,CAEE,OAAO,CAAEC,OAFX,CAGE,SAAS,CAAEC,SAHb,EAFJ,CADF,CAYD,CAQD,cAAeJ,CAAAA,wBAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction LazyLoadAddBalanceDialog(props) {\n  const { open, onClose, onSuccess } = props;\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\n\n  useEffect(() => {\n    if (open && !hasFetchedAddBalanceDialog) {\n      setHasFetchedAddBlanceDialog(true);\n      import(\"./AddBalanceDialog\").then(Component => {\n        setAddBalanceDialog(() => Component.default);\n      });\n    }\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\n\n  return (\n    <Fragment>\n      {AddBalanceDialog && (\n        <AddBalanceDialog\n          open={open}\n          onClose={onClose}\n          onSuccess={onSuccess}\n        ></AddBalanceDialog>\n      )}\n    </Fragment>\n  );\n\n}\n\nLazyLoadAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default LazyLoadAddBalanceDialog;\n"]},"metadata":{},"sourceType":"module"}