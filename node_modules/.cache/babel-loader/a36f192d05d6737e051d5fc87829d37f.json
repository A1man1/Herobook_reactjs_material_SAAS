{"ast":null,"code":"import _slicedToArray from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect}from\"react\";import PostContent from\"./PostContent\";import AddPost from\"./AddPost\";function Posts(props){var selectPosts=props.selectPosts,EmojiTextArea=props.EmojiTextArea,ImageCropper=props.ImageCropper,Dropzone=props.Dropzone,DateTimePicker=props.DateTimePicker,pushMessageToSnackbar=props.pushMessageToSnackbar,posts=props.posts,setPosts=props.setPosts;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAddPostPaperOpen=_useState2[0],setIsAddPostPaperOpen=_useState2[1];var openAddPostModal=useCallback(function(){setIsAddPostPaperOpen(true);},[setIsAddPostPaperOpen]);var closeAddPostModal=useCallback(function(){setIsAddPostPaperOpen(false);},[setIsAddPostPaperOpen]);useEffect(function(){selectPosts();},[selectPosts]);if(isAddPostPaperOpen){return/*#__PURE__*/React.createElement(AddPost,{onClose:closeAddPostModal,EmojiTextArea:EmojiTextArea,ImageCropper:ImageCropper,Dropzone:Dropzone,DateTimePicker:DateTimePicker,pushMessageToSnackbar:pushMessageToSnackbar});}return/*#__PURE__*/React.createElement(PostContent,{openAddPostModal:openAddPostModal,posts:posts,setPosts:setPosts,pushMessageToSnackbar:pushMessageToSnackbar});}export default Posts;","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_in/components/posts/Posts.js"],"names":["React","useState","useCallback","useEffect","PostContent","AddPost","Posts","props","selectPosts","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","pushMessageToSnackbar","posts","setPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","openAddPostModal","closeAddPostModal"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,CAAuCC,SAAvC,KAAwD,OAAxD,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,IAElBC,CAAAA,WAFkB,CAUhBD,KAVgB,CAElBC,WAFkB,CAGlBC,aAHkB,CAUhBF,KAVgB,CAGlBE,aAHkB,CAIlBC,YAJkB,CAUhBH,KAVgB,CAIlBG,YAJkB,CAKlBC,QALkB,CAUhBJ,KAVgB,CAKlBI,QALkB,CAMlBC,cANkB,CAUhBL,KAVgB,CAMlBK,cANkB,CAOlBC,qBAPkB,CAUhBN,KAVgB,CAOlBM,qBAPkB,CAQlBC,KARkB,CAUhBP,KAVgB,CAQlBO,KARkB,CASlBC,QATkB,CAUhBR,KAVgB,CASlBQ,QATkB,eAWgCd,QAAQ,CAAC,KAAD,CAXxC,wCAWbe,kBAXa,eAWOC,qBAXP,eAapB,GAAMC,CAAAA,gBAAgB,CAAGhB,WAAW,CAAC,UAAM,CACzCe,qBAAqB,CAAC,IAAD,CAArB,CACD,CAFmC,CAEjC,CAACA,qBAAD,CAFiC,CAApC,CAIA,GAAME,CAAAA,iBAAiB,CAAGjB,WAAW,CAAC,UAAM,CAC1Ce,qBAAqB,CAAC,KAAD,CAArB,CACD,CAFoC,CAElC,CAACA,qBAAD,CAFkC,CAArC,CAIAd,SAAS,CAAC,UAAM,CACdK,WAAW,GACZ,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,GAAIQ,kBAAJ,CAAwB,CACtB,mBAAO,oBAAC,OAAD,EACL,OAAO,CAAEG,iBADJ,CAEL,aAAa,CAAEV,aAFV,CAGL,YAAY,CAAEC,YAHT,CAIL,QAAQ,CAAEC,QAJL,CAKL,cAAc,CAAEC,cALX,CAML,qBAAqB,CAAEC,qBANlB,EAAP,CAQD,CACD,mBAAO,oBAAC,WAAD,EACL,gBAAgB,CAAEK,gBADb,CAEL,KAAK,CAAEJ,KAFF,CAGL,QAAQ,CAAEC,QAHL,CAIL,qBAAqB,CAAEF,qBAJlB,EAAP,CAMD,CAaD,cAAeP,CAAAA,KAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostContent from \"./PostContent\";\nimport AddPost from \"./AddPost\";\n\nfunction Posts(props) {\n  const {\n    selectPosts,\n    EmojiTextArea,\n    ImageCropper,\n    Dropzone,\n    DateTimePicker,\n    pushMessageToSnackbar,\n    posts,\n    setPosts,\n  } = props;\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\n\n  const openAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(true);\n  }, [setIsAddPostPaperOpen]);\n\n  const closeAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(false);\n  }, [setIsAddPostPaperOpen]);\n\n  useEffect(() => {\n    selectPosts();\n  }, [selectPosts]);\n\n  if (isAddPostPaperOpen) {\n    return <AddPost\n      onClose={closeAddPostModal}\n      EmojiTextArea={EmojiTextArea}\n      ImageCropper={ImageCropper}\n      Dropzone={Dropzone}\n      DateTimePicker={DateTimePicker}\n      pushMessageToSnackbar={pushMessageToSnackbar}\n    />\n  }\n  return <PostContent\n    openAddPostModal={openAddPostModal}\n    posts={posts}\n    setPosts={setPosts}\n    pushMessageToSnackbar={pushMessageToSnackbar}\n  />\n}\n\nPosts.propTypes = {\n  EmojiTextArea: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectPosts: PropTypes.func.isRequired,\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}