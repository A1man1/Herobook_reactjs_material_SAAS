{"ast":null,"code":"import _slicedToArray from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useCallback,useRef}from\"react\";import{Popover,IconButton,MenuList,ListItemText,ListItemIcon,MenuItem,withStyles}from\"@material-ui/core\";import MoreVertIcon from\"@material-ui/icons/MoreVert\";var styles={listItemtext:{paddingLeft:\"0 !important\"}};function VertOptions(props){var items=props.items,classes=props.classes,color=props.color;var anchorEl=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var handleClose=useCallback(function(){setIsOpen(false);},[setIsOpen]);var handleOpen=useCallback(function(){setIsOpen(true);},[setIsOpen]);var id=isOpen?\"scroll-playground\":null;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(IconButton,{onClick:handleOpen,buttonRef:anchorEl,style:{color:color?color:null},\"aria-describedby\":id,\"aria-label\":\"More Options\"},/*#__PURE__*/React.createElement(MoreVertIcon,{style:{color:color?color:null}})),/*#__PURE__*/React.createElement(Popover,{id:id,open:isOpen,anchorEl:anchorEl.current,anchorOrigin:{vertical:\"bottom\",horizontal:\"center\"},transformOrigin:{vertical:\"top\",horizontal:\"center\"},onClose:handleClose},/*#__PURE__*/React.createElement(MenuList,{dense:true},items.map(function(item){return/*#__PURE__*/React.createElement(MenuItem,{key:item.name,onClick:function onClick(){handleClose();item.onClick();}},/*#__PURE__*/React.createElement(ListItemIcon,null,item.icon),/*#__PURE__*/React.createElement(ListItemText,{className:classes.listItemtext},item.name));}))));}export default withStyles(styles)(VertOptions);","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/shared/components/VertOptions.js"],"names":["React","Fragment","useState","useCallback","useRef","Popover","IconButton","MenuList","ListItemText","ListItemIcon","MenuItem","withStyles","MoreVertIcon","styles","listItemtext","paddingLeft","VertOptions","props","items","classes","color","anchorEl","isOpen","setIsOpen","handleClose","handleOpen","id","current","vertical","horizontal","map","item","name","onClick","icon"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,WAApC,CAAiDC,MAAjD,KAA+D,OAA/D,CAEA,OACEC,OADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,YAJF,CAKEC,YALF,CAMEC,QANF,CAOEC,UAPF,KAQO,mBARP,CASA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,YAAY,CAAE,CACZC,WAAW,CAAE,cADD,CADD,CAAf,CAMA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,IAClBC,CAAAA,KADkB,CACQD,KADR,CAClBC,KADkB,CACXC,OADW,CACQF,KADR,CACXE,OADW,CACFC,KADE,CACQH,KADR,CACFG,KADE,CAE1B,GAAMC,CAAAA,QAAQ,CAAGjB,MAAM,EAAvB,CAF0B,cAGEF,QAAQ,CAAC,KAAD,CAHV,wCAGnBoB,MAHmB,eAGXC,SAHW,eAK1B,GAAMC,CAAAA,WAAW,CAAGrB,WAAW,CAAC,UAAM,CACpCoB,SAAS,CAAC,KAAD,CAAT,CACD,CAF8B,CAE5B,CAACA,SAAD,CAF4B,CAA/B,CAIA,GAAME,CAAAA,UAAU,CAAGtB,WAAW,CAAC,UAAM,CACnCoB,SAAS,CAAC,IAAD,CAAT,CACD,CAF6B,CAE3B,CAACA,SAAD,CAF2B,CAA9B,CAIA,GAAMG,CAAAA,EAAE,CAAGJ,MAAM,CAAG,mBAAH,CAAyB,IAA1C,CACA,mBACE,oBAAC,QAAD,mBACE,oBAAC,UAAD,EACE,OAAO,CAAEG,UADX,CAEE,SAAS,CAAEJ,QAFb,CAGE,KAAK,CAAE,CAAED,KAAK,CAAEA,KAAK,CAAGA,KAAH,CAAW,IAAzB,CAHT,CAIE,mBAAkBM,EAJpB,CAKE,aAAW,cALb,eAOE,oBAAC,YAAD,EAAc,KAAK,CAAE,CAAEN,KAAK,CAAEA,KAAK,CAAGA,KAAH,CAAW,IAAzB,CAArB,EAPF,CADF,cAUE,oBAAC,OAAD,EACE,EAAE,CAAEM,EADN,CAEE,IAAI,CAAEJ,MAFR,CAGE,QAAQ,CAAED,QAAQ,CAACM,OAHrB,CAIE,YAAY,CAAE,CACZC,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,QAFA,CAJhB,CAQE,eAAe,CAAE,CACfD,QAAQ,CAAE,KADK,CAEfC,UAAU,CAAE,QAFG,CARnB,CAYE,OAAO,CAAEL,WAZX,eAcE,oBAAC,QAAD,EAAU,KAAK,KAAf,EACGN,KAAK,CAACY,GAAN,CAAU,SAACC,IAAD,qBACT,oBAAC,QAAD,EACE,GAAG,CAAEA,IAAI,CAACC,IADZ,CAEE,OAAO,CAAE,kBAAM,CACbR,WAAW,GACXO,IAAI,CAACE,OAAL,GACD,CALH,eAOE,oBAAC,YAAD,MAAeF,IAAI,CAACG,IAApB,CAPF,cAQE,oBAAC,YAAD,EAAc,SAAS,CAAEf,OAAO,CAACL,YAAjC,EACGiB,IAAI,CAACC,IADR,CARF,CADS,EAAV,CADH,CAdF,CAVF,CADF,CA4CD,CAQD,cAAerB,CAAAA,UAAU,CAACE,MAAD,CAAV,CAAmBG,WAAnB,CAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  MenuList,\n  ListItemText,\n  ListItemIcon,\n  MenuItem,\n  withStyles,\n} from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst styles = {\n  listItemtext: {\n    paddingLeft: \"0 !important\",\n  },\n};\n\nfunction VertOptions(props) {\n  const { items, classes, color } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleOpen}\n        buttonRef={anchorEl}\n        style={{ color: color ? color : null }}\n        aria-describedby={id}\n        aria-label=\"More Options\"\n      >\n        <MoreVertIcon style={{ color: color ? color : null }} />\n      </IconButton>\n      <Popover\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        onClose={handleClose}\n      >\n        <MenuList dense>\n          {items.map((item) => (\n            <MenuItem\n              key={item.name}\n              onClick={() => {\n                handleClose();\n                item.onClick();\n              }}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText className={classes.listItemtext}>\n                {item.name}\n              </ListItemText>\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Popover>\n    </Fragment>\n  );\n}\n\nVertOptions.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.string,\n};\n\nexport default withStyles(styles)(VertOptions);\n"]},"metadata":{},"sourceType":"module"}