{"ast":null,"code":"import _defineProperty from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Drawer from'@material-ui/core/Drawer';import CssBaseline from'@material-ui/core/CssBaseline';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import Avatar from'@material-ui/core/Avatar';import AddCircleOutlineIcon from'@material-ui/icons/AddCircleOutline';import RemoveCircleIcon from'@material-ui/icons/RemoveCircle';import InputBase from'@material-ui/core/InputBase';import{fade}from'@material-ui/core/styles';import SearchIcon from'@material-ui/icons/Search';var drawerWidth=240;var useStyles=makeStyles(function(theme){return{root:{display:'flex'},appBar:{zIndex:theme.zIndex.drawer+1},drawer:{width:drawerWidth,flexShrink:0},drawerPaper:{width:drawerWidth,'margin-top':64},drawerContainer:{overflow:'auto'},content:{flexGrow:1,padding:theme.spacing(3)},search:_defineProperty({position:'relative',borderRadius:theme.shape.borderRadius,backgroundColor:fade(theme.palette.common.white,0.15),'&:hover':{backgroundColor:fade(theme.palette.common.white,0.25)},marginLeft:0,width:'100%'},theme.breakpoints.up('sm'),{marginLeft:theme.spacing(1),width:'auto'}),searchIcon:{padding:theme.spacing(0,2),height:'100%',position:'absolute',pointerEvents:'none',display:'flex',alignItems:'center',justifyContent:'center'},inputRoot:{color:'inherit'},inputInput:_defineProperty({padding:theme.spacing(1,1,1,0),// vertical padding + font size from searchIcon\npaddingLeft:\"calc(1em + \".concat(theme.spacing(4),\"px)\"),transition:theme.transitions.create('width'),width:'100%'},theme.breakpoints.up('sm'),{width:'12ch','&:focus':{width:'20ch'}})};});export default function ClippedDrawer(props){var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(CssBaseline,null),/*#__PURE__*/React.createElement(Drawer,{className:classes.drawer,variant:\"permanent\",classes:{paper:classes.drawerPaper}},/*#__PURE__*/React.createElement(\"div\",{className:classes.search},/*#__PURE__*/React.createElement(\"div\",{className:classes.searchIcon},/*#__PURE__*/React.createElement(SearchIcon,null)),/*#__PURE__*/React.createElement(InputBase,{placeholder:\"Search\\u2026\",classes:{root:classes.inputRoot,input:classes.inputInput},inputProps:{'aria-label':'search'}})),/*#__PURE__*/React.createElement(\"div\",{className:classes.drawerContainer},/*#__PURE__*/React.createElement(ListItem,{button:true},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(AddCircleOutlineIcon,null)),/*#__PURE__*/React.createElement(ListItemText,{primary:\"Add Friends\"})),/*#__PURE__*/React.createElement(ListItem,{button:true},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(RemoveCircleIcon,null)),/*#__PURE__*/React.createElement(ListItemText,{primary:\"Remove Friends\"})),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(List,null,[].map(function(text,index){return/*#__PURE__*/React.createElement(ListItem,{button:true,key:text},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(Avatar,null,\"W\")),/*#__PURE__*/React.createElement(ListItemText,{primary:text}));}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.hider})),/*#__PURE__*/React.createElement(\"main\",{className:classes.content}));}","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_out/components/Chat/Chat.js"],"names":["React","makeStyles","Drawer","CssBaseline","List","Divider","ListItem","ListItemIcon","ListItemText","Avatar","AddCircleOutlineIcon","RemoveCircleIcon","InputBase","fade","SearchIcon","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","ClippedDrawer","props","classes","paper","input","map","text","index","hider"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\n\nconst drawerWidth = 240; \nconst useStyles =makeStyles((theme) => ({\n root: {\n   display: 'flex',\n },\n appBar: {\n   zIndex: theme.zIndex.drawer + 1,\n },\n drawer: {\n   width: drawerWidth,\n   flexShrink: 0,\n },\n drawerPaper: {\n   width: drawerWidth,\n   'margin-top': 64,\n },\n drawerContainer: {\n   overflow: 'auto',\n },\n content: {\n   flexGrow: 1,\n   padding: theme.spacing(3),\n },\n\n\n search: {\n   position: 'relative',\n   borderRadius: theme.shape.borderRadius,\n   backgroundColor: fade(theme.palette.common.white, 0.15),\n   '&:hover': {\n     backgroundColor: fade(theme.palette.common.white, 0.25),\n   },\n   marginLeft: 0,\n   width: '100%',\n   [theme.breakpoints.up('sm')]: {\n     marginLeft: theme.spacing(1),\n     width: 'auto',\n   },\n },\n searchIcon: {\n   padding: theme.spacing(0, 2),\n   height: '100%',\n   position: 'absolute',\n   pointerEvents: 'none',\n   display: 'flex',\n   alignItems: 'center',\n   justifyContent: 'center',\n },\n inputRoot: {\n   color: 'inherit',\n },\n inputInput: {\n   padding: theme.spacing(1, 1, 1, 0),\n   // vertical padding + font size from searchIcon\n   paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n   transition: theme.transitions.create('width'),\n   width: '100%',\n   [theme.breakpoints.up('sm')]: {\n     width: '12ch',\n     '&:focus': {\n       width: '20ch',\n     },\n   },\n },\n\n\n\n}));\n\n\nexport default function ClippedDrawer (props){ \n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n         <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        <div className={classes.drawerContainer}>\n        <ListItem button>\n        <ListItemIcon>\n         <AddCircleOutlineIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Add Friends\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n         <RemoveCircleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Remove Friends\" />\n      </ListItem>\n          <Divider />\n          <List>\n            {[].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{<Avatar>W</Avatar>}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n        <div className={classes.hider}>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n       \n      </main>\n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}