{"ast":null,"code":"import _slicedToArray from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment,useState,useCallback}from\"react\";import\"emoji-mart/css/emoji-mart.css\";import{Picker}from\"emoji-mart\";import{TextField,IconButton,Collapse,FormHelperText,Box,Grid,withStyles}from\"@material-ui/core\";import EmojiEmotionsIcon from\"@material-ui/icons/EmojiEmotions\";import CloseIcon from\"@material-ui/icons/Close\";import countWithEmojis from\"../functions/countWithEmojis\";var styles=function styles(theme){return{\"@global\":{\".emoji-mart-category-label\":theme.typography.body1,\".emoji-mart-bar\":{display:\"none !important\"},\".emoji-mart-search input\":_objectSpread(_objectSpread({},theme.typography.body1),theme.border),\".emoji-mart-search\":{marginTop:\"\".concat(theme.spacing(1),\"px !important\"),paddingRight:\"\".concat(theme.spacing(1),\"px !important\"),paddingLeft:\"\".concat(theme.spacing(1),\"px !important\"),paddingBottom:\"\".concat(theme.spacing(1),\"px !important\")},\".emoji-mart-search-icon\":{top:\"5px !important\",right:\"14px !important\",fontSize:20},\".emoji-mart-scroll\":{height:240},\".emoji-mart\":_objectSpread({},theme.border)},floatButtonWrapper:{position:\"absolute\",bottom:12,right:12},floatButtonSVG:{color:theme.palette.primary.light},relative:{position:\"relative\"}};};/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won't display them.\n */var emojisToShowFilter=function emojisToShowFilter(emoji){if(emoji.unified.length>5){return false;}return true;};function EmojiTextarea(props){var theme=props.theme,classes=props.classes,rightContent=props.rightContent,placeholder=props.placeholder,maxCharacters=props.maxCharacters,emojiSet=props.emojiSet,inputClassName=props.inputClassName,onChange=props.onChange;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),characters=_useState6[0],setCharacters=_useState6[1];var onSelectEmoji=useCallback(function(emoji){var _characters;var _value=value+emoji.native;if(maxCharacters){_characters=countWithEmojis(_value);if(_characters>maxCharacters){return;}}if(onChange){onChange(_value,_characters);}setValue(_value);setCharacters(_characters);},[value,setValue,setCharacters,maxCharacters,onChange]);var handleTextFieldChange=useCallback(function(event){var target=event.target;var value=target.value;var characters;if(maxCharacters){characters=countWithEmojis(value);if(characters>maxCharacters){return;}}if(onChange){onChange(value,characters);}setValue(value);setCharacters(characters);},[maxCharacters,onChange,setValue,setCharacters]);var toggleOpen=useCallback(function(){setOpen(!open);},[open,setOpen]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Grid,{spacing:0,container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:rightContent?8:12,sm:rightContent?9:12,lg:rightContent?10:12,className:classes.relative},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,multiline:true,variant:\"outlined\",rows:6,onInput:handleTextFieldChange,value:value,placeholder:placeholder,InputProps:{classes:{notchedOutline:inputClassName?inputClassName:null}}}),/*#__PURE__*/React.createElement(\"div\",{className:classes.floatButtonWrapper},/*#__PURE__*/React.createElement(IconButton,{onClick:toggleOpen},open?/*#__PURE__*/React.createElement(CloseIcon,{color:\"primary\"}):/*#__PURE__*/React.createElement(EmojiEmotionsIcon,{color:\"primary\"})))),rightContent&&/*#__PURE__*/React.createElement(Grid,{item:true,xs:4,sm:3,lg:2},rightContent)),maxCharacters&&/*#__PURE__*/React.createElement(FormHelperText,{error:characters>=maxCharacters},\"\".concat(characters,\"/\").concat(maxCharacters,\" characters\")),/*#__PURE__*/React.createElement(Collapse,{in:open},/*#__PURE__*/React.createElement(Box,{mt:1},/*#__PURE__*/React.createElement(Picker,{set:emojiSet,color:theme.palette.primary.main,style:{width:\"100%\"},onSelect:onSelectEmoji,emojisToShowFilter:emojisToShowFilter}))));}export default withStyles(styles,{withTheme:true})(EmojiTextarea);","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/shared/components/EmojiTextArea.js"],"names":["React","Fragment","useState","useCallback","Picker","TextField","IconButton","Collapse","FormHelperText","Box","Grid","withStyles","EmojiEmotionsIcon","CloseIcon","countWithEmojis","styles","theme","typography","body1","display","border","marginTop","spacing","paddingRight","paddingLeft","paddingBottom","top","right","fontSize","height","floatButtonWrapper","position","bottom","floatButtonSVG","color","palette","primary","light","relative","emojisToShowFilter","emoji","unified","length","EmojiTextarea","props","classes","rightContent","placeholder","maxCharacters","emojiSet","inputClassName","onChange","open","setOpen","value","setValue","characters","setCharacters","onSelectEmoji","_characters","_value","native","handleTextFieldChange","event","target","toggleOpen","notchedOutline","main","width","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport {\n  TextField,\n  IconButton,\n  Collapse,\n  FormHelperText,\n  Box,\n  Grid,\n  withStyles\n} from \"@material-ui/core\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport countWithEmojis from \"../functions/countWithEmojis\";\n\nconst styles = theme => ({\n  \"@global\": {\n    \".emoji-mart-category-label\": theme.typography.body1,\n    \".emoji-mart-bar\": { display: \"none !important\" },\n    \".emoji-mart-search input\": {\n      ...theme.typography.body1,\n      ...theme.border\n    },\n    \".emoji-mart-search\": {\n      marginTop: `${theme.spacing(1)}px !important`,\n      paddingRight: `${theme.spacing(1)}px !important`,\n      paddingLeft: `${theme.spacing(1)}px !important`,\n      paddingBottom: `${theme.spacing(1)}px !important`\n    },\n    \".emoji-mart-search-icon\": {\n      top: \"5px !important\",\n      right: \"14px !important\",\n      fontSize: 20\n    },\n    \".emoji-mart-scroll\": {\n      height: 240\n    },\n    \".emoji-mart\": {\n      ...theme.border\n    }\n  },\n  floatButtonWrapper: {\n    position: \"absolute\",\n    bottom: 12,\n    right: 12\n  },\n  floatButtonSVG: {\n    color: theme.palette.primary.light\n  },\n  relative: {\n    position: \"relative\"\n  }\n});\n\n/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won't display them.\n */\nconst emojisToShowFilter = emoji => {\n  if (emoji.unified.length > 5) {\n    return false;\n  }\n  return true;\n};\n\nfunction EmojiTextarea(props) {\n  const {\n    theme,\n    classes,\n    rightContent,\n    placeholder,\n    maxCharacters,\n    emojiSet,\n    inputClassName,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [characters, setCharacters] = useState(0);\n\n  const onSelectEmoji = useCallback(\n    emoji => {\n      let _characters;\n      let _value = value + emoji.native;\n      if (maxCharacters) {\n        _characters = countWithEmojis(_value);\n        if (_characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(_value, _characters);\n      }\n      setValue(_value);\n      setCharacters(_characters);\n    },\n    [value, setValue, setCharacters, maxCharacters, onChange]\n  );\n\n  const handleTextFieldChange = useCallback(\n    event => {\n      const { target } = event;\n      const { value } = target;\n      let characters;\n      if (maxCharacters) {\n        characters = countWithEmojis(value);\n        if (characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(value, characters);\n      }\n      setValue(value);\n      setCharacters(characters);\n    },\n    [maxCharacters, onChange, setValue, setCharacters]\n  );\n\n  const toggleOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n\n  return (\n    <Fragment>\n      <Grid spacing={0} container>\n        <Grid\n          item\n          xs={rightContent ? 8 : 12}\n          sm={rightContent ? 9 : 12}\n          lg={rightContent ? 10 : 12}\n          className={classes.relative}\n        >\n          <TextField\n            fullWidth\n            multiline\n            variant=\"outlined\"\n            rows={6}\n            onInput={handleTextFieldChange}\n            value={value}\n            placeholder={placeholder}\n            InputProps={{\n              classes: {\n                notchedOutline: inputClassName ? inputClassName : null\n              }\n            }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={toggleOpen}>\n              {open ? (\n                <CloseIcon color=\"primary\" />\n              ) : (\n                <EmojiEmotionsIcon color=\"primary\" />\n              )}\n            </IconButton>\n          </div>\n        </Grid>\n        {rightContent && (\n          <Grid item xs={4} sm={3} lg={2}>\n            {rightContent}\n          </Grid>\n        )}\n      </Grid>\n      {maxCharacters && (\n        <FormHelperText error={characters >= maxCharacters}>\n          {`${characters}/${maxCharacters} characters`}\n        </FormHelperText>\n      )}\n      <Collapse in={open}>\n        <Box mt={1}>\n          <Picker\n            set={emojiSet}\n            color={theme.palette.primary.main}\n            style={{ width: \"100%\" }}\n            onSelect={onSelectEmoji}\n            emojisToShowFilter={emojisToShowFilter}\n          />\n        </Box>\n      </Collapse>\n    </Fragment>\n  );\n}\n\nEmojiTextarea.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  emojiSet: PropTypes.string.isRequired,\n  rightContent: PropTypes.element,\n  placeholder: PropTypes.string,\n  maxCharacters: PropTypes.number,\n  onChange: PropTypes.func,\n  inputClassName: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(EmojiTextarea);\n"]},"metadata":{},"sourceType":"module"}