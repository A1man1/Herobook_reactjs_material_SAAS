{"ast":null,"code":"import React,{useEffect}from\"react\";import{Link}from\"react-router-dom\";import{List,ListItem,ListItemIcon,ListItemText,Drawer,withStyles,IconButton,Typography,withWidth,isWidthUp,Toolbar}from\"@material-ui/core\";import CloseIcon from\"@material-ui/icons/Close\";var styles=function styles(theme){return{closeIcon:{marginRight:theme.spacing(0.5)},headSection:{width:200},blackList:{backgroundColor:theme.palette.common.black,height:\"100%\"},noDecoration:{textDecoration:\"none !important\"}};};function NavigationDrawer(props){var width=props.width,open=props.open,onClose=props.onClose,anchor=props.anchor,classes=props.classes,menuItems=props.menuItems,selectedItem=props.selectedItem,theme=props.theme;useEffect(function(){window.onresize=function(){if(isWidthUp(\"sm\",width)&&open){onClose();}};},[width,open,onClose]);return/*#__PURE__*/React.createElement(Drawer,{variant:\"temporary\",open:open,onClose:onClose,anchor:anchor},/*#__PURE__*/React.createElement(Toolbar,{className:classes.headSection},/*#__PURE__*/React.createElement(ListItem,{style:{paddingTop:theme.spacing(0),paddingBottom:theme.spacing(0),height:\"100%\",justifyContent:anchor===\"left\"?\"flex-start\":\"flex-end\"},disableGutters:true},/*#__PURE__*/React.createElement(ListItemIcon,{className:classes.closeIcon},/*#__PURE__*/React.createElement(IconButton,{onClick:onClose,\"aria-label\":\"Close Navigation\"},/*#__PURE__*/React.createElement(CloseIcon,{color:\"primary\"}))))),/*#__PURE__*/React.createElement(List,{className:classes.blackList},menuItems.map(function(element){if(element.link){return/*#__PURE__*/React.createElement(Link,{key:element.name,to:element.link,className:classes.noDecoration,onClick:onClose},/*#__PURE__*/React.createElement(ListItem,{button:true,selected:selectedItem===element.name/**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */,disableRipple:true,disableTouchRipple:true},/*#__PURE__*/React.createElement(ListItemIcon,null,element.icon),/*#__PURE__*/React.createElement(ListItemText,{primary:/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",className:\"text-white\"},element.name)})));}return/*#__PURE__*/React.createElement(ListItem,{button:true,key:element.name,onClick:element.onClick},/*#__PURE__*/React.createElement(ListItemIcon,null,element.icon),/*#__PURE__*/React.createElement(ListItemText,{primary:/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",className:\"text-white\"},element.name)}));})));}export default withWidth()(withStyles(styles,{withTheme:true})(NavigationDrawer));","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/shared/components/NavigationDrawer.js"],"names":["React","useEffect","Link","List","ListItem","ListItemIcon","ListItemText","Drawer","withStyles","IconButton","Typography","withWidth","isWidthUp","Toolbar","CloseIcon","styles","theme","closeIcon","marginRight","spacing","headSection","width","blackList","backgroundColor","palette","common","black","height","noDecoration","textDecoration","NavigationDrawer","props","open","onClose","anchor","classes","menuItems","selectedItem","window","onresize","paddingTop","paddingBottom","justifyContent","map","element","link","name","icon","onClick","withTheme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n"]},"metadata":{},"sourceType":"module"}