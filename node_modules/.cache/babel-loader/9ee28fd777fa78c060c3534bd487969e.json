{"ast":null,"code":"import React,{Fragment}from\"react\";import{Typography,withStyles}from\"@material-ui/core\";var styles=function styles(theme){return{iconWrapper:{borderRadius:theme.shape.borderRadius,textAlign:\"center\",display:\"inline-flex\",alignItems:\"center\",justifyContent:\"center\",marginBottom:theme.spacing(3),padding:theme.spacing(1)*1.5}};};function shadeColor(hex,percent){var f=parseInt(hex.slice(1),16);var t=percent<0?0:255;var p=percent<0?percent*-1:percent;var R=f>>16;var G=f>>8&0x00ff;var B=f&0x0000ff;return\"#\".concat((0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1));}function FeatureCard(props){var classes=props.classes,Icon=props.Icon,color=props.color,headline=props.headline,text=props.text;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{// We will set color and fill here, due to some prios complications\nclassName:classes.iconWrapper,style:{color:color,backgroundColor:shadeColor(color,0.5),fill:color}},Icon),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",paragraph:true},headline),/*#__PURE__*/React.createElement(Typography,{variant:\"body1\",color:\"textSecondary\"},text));}export default withStyles(styles,{withTheme:true})(FeatureCard);","map":{"version":3,"sources":["/home/aman/project/front end react/React-js-machine-learning-master/frontend/interface/src/logged_out/components/home/FeatureCard.js"],"names":["React","Fragment","Typography","withStyles","styles","theme","iconWrapper","borderRadius","shape","textAlign","display","alignItems","justifyContent","marginBottom","spacing","padding","shadeColor","hex","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","FeatureCard","props","classes","Icon","color","headline","text","backgroundColor","fill","withTheme"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,mBAAvC,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,WAAW,CAAE,CACXC,YAAY,CAAEF,KAAK,CAACG,KAAN,CAAYD,YADf,CAEXE,SAAS,CAAE,QAFA,CAGXC,OAAO,CAAE,aAHE,CAIXC,UAAU,CAAE,QAJD,CAKXC,cAAc,CAAE,QALL,CAMXC,YAAY,CAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CANH,CAOXC,OAAO,CAAEV,KAAK,CAACS,OAAN,CAAc,CAAd,EAAmB,GAPjB,CADU,CAAL,EAApB,CAYA,QAASE,CAAAA,UAAT,CAAoBC,GAApB,CAAyBC,OAAzB,CAAkC,CAChC,GAAMC,CAAAA,CAAC,CAAGC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,CAAD,CAAe,EAAf,CAAlB,CAEA,GAAMC,CAAAA,CAAC,CAAGJ,OAAO,CAAG,CAAV,CAAc,CAAd,CAAkB,GAA5B,CAEA,GAAMK,CAAAA,CAAC,CAAGL,OAAO,CAAG,CAAV,CAAcA,OAAO,CAAG,CAAC,CAAzB,CAA6BA,OAAvC,CAEA,GAAMM,CAAAA,CAAC,CAAGL,CAAC,EAAI,EAAf,CAEA,GAAMM,CAAAA,CAAC,CAAIN,CAAC,EAAI,CAAN,CAAW,MAArB,CAEA,GAAMO,CAAAA,CAAC,CAAGP,CAAC,CAAG,QAAd,CACA,iBAAW,CACT,UACA,CAACQ,IAAI,CAACC,KAAL,CAAW,CAACN,CAAC,CAAGE,CAAL,EAAUD,CAArB,EAA0BC,CAA3B,EAAgC,OADhC,CAEA,CAACG,IAAI,CAACC,KAAL,CAAW,CAACN,CAAC,CAAGG,CAAL,EAAUF,CAArB,EAA0BE,CAA3B,EAAgC,KAFhC,EAGCE,IAAI,CAACC,KAAL,CAAW,CAACN,CAAC,CAAGI,CAAL,EAAUH,CAArB,EAA0BG,CAH3B,CADS,EAMRG,QANQ,CAMC,EAND,EAORR,KAPQ,CAOF,CAPE,CAAX,EAQD,CAED,QAASS,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,IAClBC,CAAAA,OADkB,CACuBD,KADvB,CAClBC,OADkB,CACTC,IADS,CACuBF,KADvB,CACTE,IADS,CACHC,KADG,CACuBH,KADvB,CACHG,KADG,CACIC,QADJ,CACuBJ,KADvB,CACII,QADJ,CACcC,IADd,CACuBL,KADvB,CACcK,IADd,CAE1B,mBACE,oBAAC,QAAD,mBACE,2BACE;AACA,SAAS,CAAEJ,OAAO,CAAC1B,WAFrB,CAGE,KAAK,CAAE,CACL4B,KAAK,CAAEA,KADF,CAELG,eAAe,CAAErB,UAAU,CAACkB,KAAD,CAAQ,GAAR,CAFtB,CAGLI,IAAI,CAAEJ,KAHD,CAHT,EASGD,IATH,CADF,cAYE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,KAAlC,EACGE,QADH,CAZF,cAeE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,EACGC,IADH,CAfF,CADF,CAqBD,CAUD,cAAejC,CAAAA,UAAU,CAACC,MAAD,CAAS,CAAEmC,SAAS,CAAE,IAAb,CAAT,CAAV,CAAwCT,WAAxC,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  iconWrapper: {\n    borderRadius: theme.shape.borderRadius,\n    textAlign: \"center\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(1) * 1.5\n  }\n});\n\nfunction shadeColor(hex, percent) {\n  const f = parseInt(hex.slice(1), 16);\n\n  const t = percent < 0 ? 0 : 255;\n\n  const p = percent < 0 ? percent * -1 : percent;\n\n  const R = f >> 16;\n\n  const G = (f >> 8) & 0x00ff;\n\n  const B = f & 0x0000ff;\n  return `#${(\n    0x1000000 +\n    (Math.round((t - R) * p) + R) * 0x10000 +\n    (Math.round((t - G) * p) + G) * 0x100 +\n    (Math.round((t - B) * p) + B)\n  )\n    .toString(16)\n    .slice(1)}`;\n}\n\nfunction FeatureCard(props) {\n  const { classes, Icon, color, headline, text } = props;\n  return (\n    <Fragment>\n      <div\n        // We will set color and fill here, due to some prios complications\n        className={classes.iconWrapper}\n        style={{\n          color: color,\n          backgroundColor: shadeColor(color, 0.5),\n          fill: color\n        }}\n      >\n        {Icon}\n      </div>\n      <Typography variant=\"h5\" paragraph>\n        {headline}\n      </Typography>\n      <Typography variant=\"body1\" color=\"textSecondary\">\n        {text}\n      </Typography>\n    </Fragment>\n  );\n}\n\nFeatureCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  Icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(FeatureCard);\n"]},"metadata":{},"sourceType":"module"}